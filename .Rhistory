if (!require(knitr)) install.packages("knitr"); library(knitr)
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
# Set directories
root_dir <- "" # or a directory of your R project
data_dir <- file.path(root_dir, "data")
# Set files
sample_csvfile <- "sample_data1.csv"
# Load data
df_sfx <- read_csv(file.path(data_dir, sample_csvfile))
if (!require(knitr)) install.packages("knitr"); library(knitr)
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
if (!require(kableExtra)) install.packages("kableExtra"); library(kableExtra)
if (!require(tidyverse)) install.packages("tidyverse") ; library(tidyverse)
if (!require(skimr)) install.packages("skimr") ; library(skimr)
# Set directories
root_dir <- "" # or a directory of your R project
data_dir <- file.path(root_dir, "data")
# Set files
sample_csvfile <- "sample_data1.csv"
# Load data
df_sfx <- read_csv(file.path(data_dir, sample_csvfile))
# Set directories
root_dir <- "../" # or a directory of your R project
data_dir <- file.path(root_dir, "data")
# Set files
sample_csvfile <- "sample_data1.csv"
# Load data
df_sfx <- read_csv(file.path(data_dir, sample_csvfile))
# Type your code after this line!
library(haven)
library(readxl)
spss_file <- "sample_data3.sav"
spss_datadictfile <- "sample_data3_datadictionary.xlsx"
df_spss <- read_spss(file.path(data_dir, spss_file))
spss_datadict <- read_excel(file.path(data_dir, spss_datadictfile))
df_sfx
summary(df_sfx) # Gets the summary of each variable (Min/max values, quartiles, median, mean)
skim(df_sfx) # tells you similar things to summar(), but also gives you more!
# Type your code after this line!
df_spss
skim(df_spss)
df_spss$agegp2
# Type your code after this line!
df_spss$educ
df_spss$EDUCGP2
df_spss$DASSdepgp2
df_spss$EPDSgp2
df_spss_converted <- as_factor(df_spss)
df_spss
df_spss_converted
# Type your code after this line!
df_sfx %>% select(DX, Age, Sex)
# Type your code after this line!
df_sfx %>% select(Dx, Age, Sex)
df_sfx %>% select(demographics, q1:q6)
# Type your code after this line!
demographics <- c("ID", "Age", "Sex", "Dx", "MMSE", "CDR", "GDS", "Education")
df_sfx %>% select(demographics) %>% filter(MMSE > 23)
df_sfx %>% select(demographics) %>% filter(MMSE > 16 & CDR == 0)
df_sfx %>% select(demographics) %>% filter(MMSE > 23 & c(Dx == "CONTROL" | Dx == "bvFTD" | Dx == "nfvPPA"))
df_sfx %>% select(demographics, q1:q6)
# First create a function to reverse score
reverseScore <- function(item, MaxScore, MinScore) {
# if max is 5 and mix is 1, reversed scores should be 5, 4, 3, 2, 1
# 5+1 - 1 = 5, 5+1 - 2 = 4, 5+1 - 3 = 3, 5+1 - 2 = 4, 5+1 - 1 = 5
MaxScore + MinScore - item
}
new_q_items <- c("q1", "q2_r", "q3", "q4_r", "q5", "q6_r")
# Then we create the new variables in the data frame
df_sfx_new <- df_sfx %>% select(demographics, q1:q6) %>%
mutate_at(vars("q2", "q4", "q6"), list(r = ~reverseScore(.)))
# First create a function to reverse score
reverseScore <- function(item, MaxScore, MinScore) {
# if max is 5 and mix is 1, reversed scores should be 5, 4, 3, 2, 1
# 5+1 - 1 = 5, 5+1 - 2 = 4, 5+1 - 3 = 3, 5+1 - 2 = 4, 5+1 - 1 = 5
MaxScore + MinScore - item
}
new_q_items <- c("q1", "q2_r", "q3", "q4_r", "q5", "q6_r")
# Then we create the new variables in the data frame
MaxScore <- 5; MinScore <- 1
df_sfx_new <- df_sfx %>% select(demographics, q1:q6) %>%
mutate_at(vars("q2", "q4", "q6"), list(r = ~reverseScore(., MaxScore, MinScore)))
# Compute the total score
df_sfx_new %>% mutate(q_total = rowSums(select(., new_q_items)))
# First create a function to reverse score
reverseScore <- function(item, MaxScore, MinScore) {
# if max is 5 and mix is 1, reversed scores should be 5, 4, 3, 2, 1
# 5+1 - 1 = 5, 5+1 - 2 = 4, 5+1 - 3 = 3, 5+1 - 2 = 4, 5+1 - 1 = 5
MaxScore + MinScore - item
}
new_q_items <- c("q1", "q2_r", "q3", "q4_r", "q5", "q6_r")
# Then we create the new variables in the data frame
MaxScore <- 5; MinScore <- 1
df_sfx_new <- df_sfx %>% select(demographics, q1:q6) %>%
mutate_at(vars("q2", "q4", "q6"), list(r = ~reverseScore(., MaxScore, MinScore)))
# Compute the total score
df_sfx_new <- df_sfx_new %>% mutate(q_total = rowSums(select(., new_q_items)))
df_sfx_new
toReverse <- c("q2", "q4", "q6")
Reverse_newName <- c("q2_r", "q4_r", "q6_r")
# Simple loop to create new variables
df_sfx_2 <- df_sfx
for (i in 1:length(toReverse)) {
df_sfx_2[Reverse_newName[i]] <- reverseScore(df_sfx[, toReverse[i]])
}
toReverse <- c("q2", "q4", "q6")
Reverse_newName <- c("q2_r", "q4_r", "q6_r")
# Simple loop to create new variables
df_sfx_2 <- df_sfx
MaxScore <- 5; MinScore <- 1
for (i in 1:length(toReverse)) {
df_sfx_2[Reverse_newName[i]] <- reverseScore(df_sfx[, toReverse[i]], MaxScore, MinScore)
}
df_sfx_2 %>% mutate(q_total = rowSums(select(., new_q_items)))
df_sfx_2 %>% rename(WB_1 = q1,
WB_2 = q2)
if (!require(knitr)) install.packages("knitr"); library(knitr)
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
# Type your code after this line!
if (!require(knitr)) install.packages("knitr"); library(knitr)
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
if (!require(kableExtra)) install.packages("kableExtra"); library(kableExtra)
if (!require(tidyverse)) install.packages("tidyverse") ; library(tidyverse)
if (!require(skimr)) install.packages("skimr") ; library(skimr)
# Set directories
root_dir <- "../" # ../ denotes the parent directory of 01-Data-Wrangling.Rmd
# You can set your root_dir to the directory of where RWorkshop is
# e.g. /User/YOURNAME/RWorkshop
data_dir <- file.path(root_dir, "data")
# Set files
sample_csvfile <- "sample_data1.csv"
# Load data
df_sfx <- read_csv(file.path(data_dir, sample_csvfile))
# Type your code after this line!
library(haven)
library(readxl)
spss_file <- "sample_data3.sav"
spss_datadictfile <- "sample_data3_datadictionary.xlsx"
df_spss <- read_spss(file.path(data_dir, spss_file))
spss_datadict <- read_excel(file.path(data_dir, spss_datadictfile))
install.packages("fontawesome")
install.packages("fontawesome")
devtools::install_github("rstudio/fontawesome")
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
library(babynames)
library(fontawesome)
library(tidyverse)
library(tidyverse)
library(knitr)
GoodNames <- c("a", "Boo", "FOO", "my_variables", ".variables", "mod.1")
BadNames <- c("1a", "!Boo", "$", "^my_variables", "/variables", "*mod.1")
df <- data.frame(GoodNames, BadNames, stringsAsFactors = FALSE)
kable(df, format="html")
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
library(babynames)
library(fontawesome)
knitr::opts_chunk$set(comment = "#", warning = FALSE, message = FALSE)
library(babynames)
library(fontawesome)
layout: true
<!-- <div class="my-footer"><span>arm.rbind.io/slides/xaringan</span></div> -->
<!-- this adds the link footer to all slides, depends on my-footer class in css-->
---
name: xaringan-title
class: left, middle
background-image: url(img/background.jpg)
background-size: cover
# Preworkshop to Tidyverse
<img src="https://tidyverse.tidyverse.org/articles/tidyverse-logo.png" alt="tidyverse" width="180" />
### .fancy[Basic R Programming]
remotes::install_github('yihui/xaringan')
